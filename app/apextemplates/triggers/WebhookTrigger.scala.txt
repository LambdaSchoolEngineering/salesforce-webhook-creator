@(name: String, sobject: String, events: List[String], url: String)trigger @{name}Hook on @{sobject} (@{events.mkString(",")}) {

    String url = '@url';

    String eventTime = Trigger.isBefore ? 'before' : 'after';
    String eventName = Trigger.isInsert ? 'insert' : Trigger.isUpdate ? 'update' : Trigger.isDelete ? 'delete' : Trigger.isUndelete ? 'undelete' : 'unknown';

    String content = LambdaWebhook.jsonContent(Trigger.new, Trigger.old, eventName + '.' + eventTime);

    LambdaWebhook.callout(url, content);

}
